// Konfiguration der Ausgänge
//  (Name,              Port, Bit, Alias)
OUT (led1,              A,    7,                           )
OUT (led2,              A,    6,   led_kappung             )
OUT (led3,              A,    5,   led_power               )
OUT (led4,              A,    4,   led_gangwarnung         )
OUT (led5,              A,    3,   led_parkbremse          )
OUT (led6,              A,    2,   led_eingekuppelt_links  )
OUT (led7,              A,    1,   led_eingekupplt_rechts  )
OUT (led8,              A,    0,   led_drehlampe           )
OUT (buzzer,            F,    2,                           )
OUT (latch_aus,         B,    6,                           )
OUT (zuendungsfreigabe, C,    0,                           )
OUT (zuendungsbruecke,  C,    1,                           ) // Zündung überbrücken, wenn 1 kann Zündung nicht mehr ausgemacht werden
OUT (system1,           C,    2,                           )
OUT (system2,           C,    3,                           )
OUT (system3,           C,    4,   einkuppeln_links        )
OUT (system4,           C,    5,   einkuppeln_rechts       )
OUT (system5,           C,    6,   trommelbremse_zu        )
OUT (system6,           C,    7,   auszugsbremse_auf       )

// Konfiguration der Eingänge
// (Name,               Port, Bit, Alias                      )
IN (schalter1,          E,    2,   schalter_einkuppeln_links  )
IN (schalter2,          E,    3,   schalter_einkuppeln_rechts )
IN (schalter3,          E,    4,   schalter_auszugsbremse_auf )
IN (schalter4,          E,    5,                              )
IN (schalter5,          E,    6,   schalter_auskuppeln        )
IN (schalter6,          B,    5,                              )
IN (system1,            D,    7,   bremse_getreten            )
IN (system2,            D,    6,   falscher_gang              )
IN (system3,            D,    5,                              )
IN (system4,            D,    4,                              )
IN (system5,            D,    3,   motor_temp_zu_hoch         )
IN (system6,            D,    2,   wandler_temp_zu_hoch       )
IN (system7,            D,    1,   kappung_gespannt           )
IN (system8,            D,    0,   parkbremse_angezogen       )
IN (system9,            B,    7,   motor_an                   )

// Zustände des Automaten
//    (Zustandsname,        Graphviz-Attribute   )
STATE (start,               ()                   )
STATE (aufbau_ok,           ()                   )
STATE (motor_an,            ()                   )
STATE (temp_ok,             ()                   )
STATE (bremse_getreten,     ()                   )
STATE (links_eingekuppelt,  ()                   )
STATE (rechts_eingekuppelt, ()                   )
STATE (schlepp_laeuft,      (shape=doublecircle) )
STATE (motor_an_fehler,     (RED)                )
STATE (ausziehen,           (BLUE2)              )

// Ereignisse, die Zustandsübergänge auslösen
//    (Ereignisname, Boolescher Ausdruck                                                 )
EVENT (aufbau_ok,    in.kappung_gespannt && in.parkbremse_angezogen && !in.falscher_gang )
EVENT (temp_ok,      !in.motor_temp_zu_hoch && !in.wandler_temp_zu_hoch                  )

// Aktionen beim Betreten eines Zustands
//     (Aktionsname,        Code-Block                                                                                          )
ACTION (links_einkuppeln,   out.auszugsbremse_auf = out.einkuppeln_links = 1; out.trommelbremse_zu = 0;                         )
ACTION (rechts_einkuppeln,  out.auszugsbremse_auf = out.einkuppeln_rechts = 1; out.trommelbremse_zu = 0;                        )
ACTION (auskuppeln,         out.auszugsbremse_auf = out.einkuppeln_links = out.einkuppeln_rechts = 0; out.trommelbremse_zu = 1; )
ACTION (latch_ausschalten,  out.latch_aus = 1;                                                                                  )
ACTION (zuendung_freigeben, out.zuendungsfreigabe = out.trommelbremse_zu = 1;                                                   )
ACTION (zuendung_sperren,   out.zuendungsfreigabe = out.trommelbremse_zu = 0;                                                   )
ACTION (auszugsbremse_auf,  out.auszugsbremse_auf = 1; out.trommelbremse_zu = out.zuendungsfreigabe = 0;                        )
ACTION (auszugsbremse_zu,   out.auszugsbremse_auf = 0; out.trommelbremse_zu = 1;                                                )

// Übergänge zwischen Zuständen
//         (Anfangszustand,      Ereignis (Boolescher Ausdurck), Endzustand,          Aktion,             Graphviz-Attribute )
TRANSITION (start,               aufbau_ok,                      aufbau_ok,           ,                   (GREEN)            )
TRANSITION (aufbau_ok,           in.schalter_auszugsbremse_auf,  ausziehen,           auszugsbremse_auf,  (BLUE2)            )
TRANSITION (aufbau_ok,           !aufbau_ok,                     start,               ,                   (BLUE)             )
TRANSITION (aufbau_ok,           temp_ok,                        temp_ok,             zuendung_freigeben, (GREEN)            )
TRANSITION (ausziehen,           !in.schalter_auszugsbremse_auf, aufbau_ok,           auszugsbremse_zu,   (BLUE2)            )
TRANSITION (ausziehen,           !aufbau_ok,                     start,               auszugsbremse_zu,   (RED)              )
TRANSITION (temp_ok,             !temp_ok,                       aufbau_ok,           zuendung_sperren,   (BLUE)             )
TRANSITION (temp_ok,             in.motor_an,                    motor_an,            ,                   (GREEN)            )
TRANSITION (temp_ok,             !aufbau_ok,                     start,               zuendung_sperren,   (RED)              )
TRANSITION (temp_ok,             in.schalter_auszugsbremse_auf,  ausziehen,           auszugsbremse_auf,  (BLUE2)            )
TRANSITION (motor_an,            in.bremse_getreten,             bremse_getreten,     ,                   (GREEN)            )
TRANSITION (motor_an,            !in.motor_an,                   temp_ok,             ,                   (BLUE)             )
TRANSITION (motor_an,            !aufbau_ok,                     motor_an_fehler,     ,                   (RED)              )
TRANSITION (bremse_getreten,     !in.bremse_getreten,            motor_an,            ,                   (BLUE)             )
TRANSITION (bremse_getreten,     !in.motor_an,                   temp_ok,             ,                   (RED)              )
TRANSITION (bremse_getreten,     in.schalter_einkuppeln_links,   links_eingekuppelt,  links_einkuppeln,   (GREEN)            )
TRANSITION (bremse_getreten,     in.schalter_einkuppeln_rechts,  rechts_eingekuppelt, rechts_einkuppeln,  (GREEN)            )
TRANSITION (bremse_getreten,     !aufbau_ok,                     motor_an_fehler,     ,                   (RED)              )
TRANSITION (links_eingekuppelt,  in.schalter_auskuppeln,         bremse_getreten,     auskuppeln,         (BLUE)             )
TRANSITION (links_eingekuppelt,  !in.motor_an,                   temp_ok,             auskuppeln,         (RED)              )
TRANSITION (rechts_eingekuppelt, in.schalter_auskuppeln,         bremse_getreten,     auskuppeln,         (BLUE)             )
TRANSITION (rechts_eingekuppelt, !in.motor_an,                   temp_ok,             auskuppeln,         (RED)              )
TRANSITION (links_eingekuppelt,  !in.bremse_getreten,            schlepp_laeuft,      latch_ausschalten,  (GREEN)            )
TRANSITION (rechts_eingekuppelt, !in.bremse_getreten,            schlepp_laeuft,      latch_ausschalten,  (GREEN)            )
TRANSITION (links_eingekuppelt,  !aufbau_ok,                     motor_an_fehler,     auskuppeln,         (RED)              )
TRANSITION (rechts_eingekuppelt, !aufbau_ok,                     motor_an_fehler,     auskuppeln,         (RED)              )
TRANSITION (motor_an_fehler,     aufbau_ok,                      motor_an,            ,                   ()                 )
TRANSITION (motor_an_fehler,     !in.motor_an,                   temp_ok,             ,                   (RED)              )

// Kommandos der Debug-Schnittstelle
//      (Name,    Funktion, Argumente,           Hilfe                                              )
COMMAND (in,      in,       "",                  "Print list of input ports"                        )
COMMAND (out,     out,      "",                  "Print list of output ports"                       )
COMMAND (on,      on_off,   "<port>",            "Set port on"                                      )
COMMAND (off,     on_off,   "<port>",            "Set port off"                                     )
COMMAND (mode,    mode,     "[--auto|--manual]", "Print or switch between automatic or manual mode" )
COMMAND (reset,   reset,    "",                  "Reset output ports"                               )
COMMAND (help,    help,     "[cmd]",             "Print this help"                                  )
COMMAND (version, version,  "",                  "Print version"                                    )
